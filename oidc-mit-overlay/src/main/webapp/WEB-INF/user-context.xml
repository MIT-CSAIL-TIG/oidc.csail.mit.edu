<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2013 The MITRE Corporation
    and the MIT Kerberos and Internet Trust Consortium
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<import resource="file:/etc/mitreid-connect/admins.xml" />

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider ref="kerberosAuthenticationProvider" />
        <security:authentication-provider ref="kerberosServiceAuthenticationProvider" /> <!-- Used with SPNEGO -->
	</security:authentication-manager>
	
	<context:component-scan base-package="edu.mit.oidc.web" />
	
	<!-- LDAP -->
	
	<security:ldap-server url="ldaps://ldap-slave.csail.mit.edu/ou=people,dc=csail,dc=mit,dc=edu" />

   <bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url" value="ldaps://ldap-slave.csail.mit.edu" />
		<property name="base" value="ou=people,dc=csail,dc=mit,dc=edu" />
   </bean>
   
	<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg name="contextSource" ref="contextSource" />
	</bean>
	
   <bean id="groupContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url" value="ldaps://ldap-slave.csail.mit.edu" />
		<property name="base" value="ou=groups,dc=csail,dc=mit,dc=edu" />
   </bean>
   
	<bean id="groupLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg name="contextSource" ref="contextSource" />
	</bean>

	<bean id="ldapUserInfoRepository" primary="true" class="edu.mit.oidc.repository.impl.LdapUserInfoRepository">
		<property name="ldapTemplate" ref="ldapTemplate" />
		<property name="groupRepository" ref="ldapGroupInfoRepository" />
	</bean>

	<bean id="ldapGroupInfoRepository" class="edu.mit.oidc.repository.impl.LdapGroupInfoRepository">
		<property name="ldapTemplate" ref="groupLdapTemplate" />
	</bean>

	<bean id="groupScopeClaimsTranslationService" primary="true" class="edu.mit.oidc.service.impl.GroupedScopeClaimTranslationService" />
		
	<mvc:view-controller path="/login" view-name="login" />

<!-- 	<security:http pattern="/login**" use-expressions="true" entry-point-ref="http403EntryPoint"> -->
<!-- 		<security:intercept-url pattern="/login**" access="permitAll"/>	 -->
<!-- 		<security:headers> -->
<!-- 			<security:frame-options policy="DENY" /> -->
<!-- 		</security:headers> -->
<!-- 		<security:csrf /> -->
<!-- 	</security:http> -->


	<!-- Kerberos -->
	
	<security:http pattern="/kerberos_login**" use-expressions="true" entry-point-ref="spnegoEntryPoint" authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/kerberos_login**" access="isAuthenticated()" />
		<security:custom-filter ref="spnegoAuthenticationProcessingFilter" position="BASIC_AUTH_FILTER" />
	</security:http>

    <bean id="spnegoEntryPoint" class="org.springframework.security.kerberos.web.authentication.SpnegoEntryPoint" />

    <bean id="spnegoAuthenticationProcessingFilter" class="org.springframework.security.kerberos.web.authentication.SpnegoAuthenticationProcessingFilter">
            <property name="authenticationManager" ref="authenticationManager" />
            <property name="failureHandler">
            	<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
            		<property name="defaultFailureUrl" value="/login.jsp?error=kerberos"></property>
            	</bean>
            </property>
    </bean>

    <bean id="kerberosServiceAuthenticationProvider"
            class="org.springframework.security.kerberos.authentication.KerberosServiceAuthenticationProvider">
            <property name="ticketValidator">
                    <bean class="org.springframework.security.kerberos.authentication.sun.SunJaasKerberosTicketValidator">
                            <property name="servicePrincipal" value="HTTP/oidc-dev.csail.mit.edu@CSAIL.MIT.EDU" />
                            <!-- Setting keyTabLocation to a classpath resource will most likely not work in a Java EE application Server -->
                            <!-- See the Javadoc for more information on that -->
                            <property name="keyTabLocation" value="file:/etc/oidc.keytab" />
                            <property name="debug" value="true" />
                    </bean>
            </property>
            <property name="userDetailsService" ref="kerbUserService" />
    </bean>
    
	<bean id="kerberosAuthenticationProvider"
			class="org.springframework.security.kerberos.authentication.KerberosAuthenticationProvider">
			<property name="userDetailsService" ref="kerbUserService" />
			<property name="kerberosClient">
				<bean class="org.springframework.security.kerberos.authentication.sun.SunJaasKerberosClient">
					<property name="debug" value="true"/>
				</bean>
			</property>
	</bean>

	<bean class="edu.mit.oidc.userdetails.UsernamePrefixKerberosLdapUserDetailsService" id="kerbUserService">
		<constructor-arg>
			<bean id="userSearch"
			    class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
			  <constructor-arg index="0" value=""/>
			  <constructor-arg index="1" value="(uid={0})"/>
			  <constructor-arg index="2" ref="contextSource" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="edu.mit.oidc.userdetails.MappedLdapAuthoritiesPopulator">
				<property name="admins" ref="admins" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>CSAIL.MIT.EDU</value>
			</list>
		</constructor-arg>
	</bean>

    <!-- X509 Login -->

	<security:http pattern="/cert_login**" use-expressions="true">
		<security:x509 subject-principal-regex="" user-service-ref="certUserService" />
	</security:http>
	
<!-- 	<bean class="org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter" id="certFilter"> -->
<!-- 		<property name="principalExtractor"> -->
<!-- 			<bean class="org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor"> -->
<!-- 				<property name="subjectDnRegex" value="EMAILADDRESS=(.*?)," /> -->
<!-- 			</bean> -->
<!-- 		</property> -->
<!-- 		<property name=""></property> -->
<!-- 	</bean> -->
	
	<bean class="edu.mit.oidc.userdetails.UsernamePrefixKerberosLdapUserDetailsService" id="certUserService">
		<constructor-arg>
			<bean id="userSearch"
			    class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
			  <constructor-arg index="0" value=""/>
			  <constructor-arg index="1" value="(uid={0})"/>
			  <constructor-arg index="2" ref="contextSource" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="edu.mit.oidc.userdetails.MappedLdapAuthoritiesPopulator">
				<property name="admins" ref="admins" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>CSAIL.MIT.EDU</value>
			</list>
		</constructor-arg>		
	</bean>


    <!-- This bean definition enables a very detailed Kerberos logging -->
    <bean
            class="org.springframework.security.kerberos.authentication.sun.GlobalSunJaasKerberosConfig">
            <property name="debug" value="true" />
            <property name="krbConfLocation" value="/etc/krb5.conf"/>
    </bean>

	<security:http disable-url-rewriting="true" use-expressions="true" authentication-manager-ref="authenticationManager"> 
		<security:form-login login-page="/login" authentication-failure-url="/login?error=failure" authentication-success-handler-ref="authenticationTimeStamper" />
		<security:intercept-url pattern="/authorize" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:custom-filter ref="authRequestFilter" after="SECURITY_CONTEXT_FILTER" />
		<security:logout logout-url="/logout" />
		<security:anonymous />
		<security:expression-handler ref="oauthWebExpressionHandler" />
		<security:headers>
			<security:frame-options policy="DENY" />
		</security:headers>
		<security:csrf />
	</security:http>	

</beans>
